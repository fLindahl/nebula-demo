#
# generated by 'fips gen', don't edit, don't add to version control!
#
if (EXISTS "C:/Users/fredr/git/nebula/fips-glew/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-glew/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-glew/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-glew/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-glew/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-glew/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-glew/glew/include")
macro(fips_import_fips_glew_glew)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-glew/." "fips-glew_glew")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports")
    fips_import_fips_glew_glew()
    fips_ide_group("")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-glslang/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-glslang/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-glslang/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-glslang/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-glslang/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-glslang/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-glslang/glslang")
macro(fips_import_fips_glslang_glslang)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-glslang/." "fips-glslang_glslang")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports")
    fips_import_fips_glslang_glslang()
    fips_ide_group("")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-libjpeg/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-libjpeg/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-libjpeg/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-libjpeg/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-libjpeg/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-libjpeg/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-libjpeg/libjpeg")
macro(fips_import_fips_libjpeg_libjpeg)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-libjpeg/." "fips-libjpeg_libjpeg")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports")
    fips_import_fips_libjpeg_libjpeg()
    fips_ide_group("")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-libpng/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-libpng/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-libpng/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-libpng/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-libpng/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-libpng/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-libpng/libpng")
macro(fips_import_fips_libpng_libpng)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-libpng/." "fips-libpng_libpng")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports")
    fips_import_fips_libpng_libpng()
    fips_ide_group("")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-lua/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-lua/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-lua/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-lua/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-lua/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-lua/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-lua/lua")
macro(fips_import_fips_lua_lua)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-lua/." "fips-lua_lua")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports")
    fips_import_fips_lua_lua()
    fips_ide_group("")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-glfw/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-glfw/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-glfw/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-glfw/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-glfw/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-glfw/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-glfw/glfw/include")
macro(fips_import_fips_glfw_glfw3)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-glfw/." "fips-glfw_glfw3")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports/gfx")
    fips_import_fips_glfw_glfw3()
    fips_ide_group("")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-googletest/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-googletest/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-googletest/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-googletest/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-googletest/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-googletest/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-googletest/gtest/googletest/include")
include_directories("C:/Users/fredr/git/nebula/fips-googletest/gtest/googlemock/include")
macro(fips_import_fips_googletest_googlemock)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-googletest/." "fips-googletest_googlemock")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports")
    fips_import_fips_googletest_googlemock()
    fips_ide_group("")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-imgui/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-imgui/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-imgui/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-imgui/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-imgui/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-imgui/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-imgui/imgui")
macro(fips_import_fips_imgui_imgui)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-imgui/." "fips-imgui_imgui")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports")
    fips_import_fips_imgui_imgui()
    fips_ide_group("")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/cr/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/cr/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/cr/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/cr/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/cr/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/cr/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/cr")
if (EXISTS "C:/Users/fredr/git/nebula/fips-zlib/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-zlib/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-zlib/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-zlib/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-zlib/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-zlib/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-zlib")
include_directories("C:/Users/fredr/git/nebula/fips-zlib/zlib")
macro(fips_import_fips_zlib_zlib)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-zlib/zlib" "fips-zlib_zlib")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports/misc")
    fips_import_fips_zlib_zlib()
    fips_ide_group("")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-anyfx/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-anyfx/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-anyfx/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-anyfx/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-anyfx/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-anyfx/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-anyfx/anyfx")
include_directories("C:/Users/fredr/git/nebula/fips-anyfx/anyfx/api")
include_directories("C:/Users/fredr/git/nebula/fips-anyfx/anyfx/api/lowlevel")
include_directories("C:/Users/fredr/git/nebula/fips-anyfx/anyfx/compiler/code")
include_directories("C:/Users/fredr/git/nebula/fips-anyfx/anyfx/compiler/antlr4/src")
include_directories("C:/Users/fredr/git/nebula/fips-anyfx/anyfx/compiler/mcpp")
include_directories("C:/Users/fredr/git/nebula/fips-anyfx/anyfx/util/code")
macro(fips_import_fips_anyfx_anyfx)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-anyfx/." "fips-anyfx_anyfx")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports/gfx")
    fips_import_fips_anyfx_anyfx()
    fips_ide_group("")
endif()
if (DISABLE_FOR_NOW)
if (EXISTS "C:/Users/fredr/git/nebula/fips-bullet/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-bullet/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-bullet/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-bullet/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-bullet/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-bullet/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-bullet/bullet3/src")
macro(fips_import_fips_bullet_Bullet)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-bullet/." "fips-bullet_Bullet")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports")
    fips_import_fips_bullet_Bullet()
    fips_ide_group("")
endif()
endif()
if (FIPS_LINUX)
if (EXISTS "C:/Users/fredr/git/nebula/fips-cjson/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-cjson/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-cjson/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-cjson/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-cjson/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-cjson/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-cjson/cJSON")
macro(fips_import_fips_cjson_cjson)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-cjson/." "fips-cjson_cjson")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports/misc")
    fips_import_fips_cjson_cjson()
    fips_ide_group("")
endif()
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-devil/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-devil/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-devil/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-devil/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-devil/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-devil/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-devil/DevIL/DevIL/include")
include_directories("C:/Users/fredr/git/nebula/fips-devil/DevIL/DevIL/src-IL/include")
include_directories("C:/Users/fredr/git/nebula/fips-devil/DevIL/DevIL/src-ILU/include")
include_directories("C:/Users/fredr/git/nebula/fips-devil/DevIL/DevIL/src-ILUT/include")
add_definitions(-DIL_STATIC_LIB=1)
add_definitions(-DJPEGSTATIC=1)
macro(fips_import_fips_devil_DevIL)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-devil/." "fips-devil_DevIL")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports/gfx")
    fips_import_fips_devil_DevIL()
    fips_ide_group("")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-directxmath/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-directxmath/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-directxmath/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-directxmath/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-directxmath/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-directxmath/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-directxmath/DirectXMath/Inc")
if (EXISTS "C:/Users/fredr/git/nebula/fips-pybind11/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-pybind11/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-pybind11/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-pybind11/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-pybind11/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-pybind11/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-pybind11/pybind11/include")
if (EXISTS "C:/Users/fredr/git/nebula/fips-soloud/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-soloud/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-soloud/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-soloud/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-soloud/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-soloud/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-soloud/soloud/include")
macro(fips_import_fips_soloud_soloud)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-soloud/." "fips-soloud_soloud")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports/audio")
    fips_import_fips_soloud_soloud()
    fips_ide_group("")
endif()
if (FIPS_WINDOWS)
if (EXISTS "C:/Users/fredr/git/nebula/fips-stackwalker/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-stackwalker/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-stackwalker/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-stackwalker/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-stackwalker/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-stackwalker/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-stackwalker/StackWalker/Main")
macro(fips_import_fips_stackwalker_StackWalker)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/fips-stackwalker/." "fips-stackwalker_StackWalker")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports/misc")
    fips_import_fips_stackwalker_StackWalker()
    fips_ide_group("")
endif()
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-stb/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/fips-stb/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/fips-stb/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/fips-stb/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/fips-stb/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/fips-stb/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/fips-stb/stb")
if (EXISTS "C:/Users/fredr/git/nebula/nebula-libs/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/nebula-libs/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/nebula-libs/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/nebula-libs/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/nebula-libs/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/nebula-libs/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/nebula-libs/debugbreak")
include_directories("C:/Users/fredr/git/nebula/nebula-libs/tinyfiledialogs")
include_directories("C:/Users/fredr/git/nebula/nebula-libs")
macro(fips_import_nebula_libs_nebula_libs)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/nebula-libs/." "nebula-libs_nebula-libs")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports/misc")
    fips_import_nebula_libs_nebula_libs()
    fips_ide_group("")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/nebula/fips-include.cmake")
    include("C:/Users/fredr/git/nebula/nebula/fips-include.cmake")
elseif (EXISTS "C:/Users/fredr/git/nebula/nebula/fips-files/include.cmake")
    include ("C:/Users/fredr/git/nebula/nebula/fips-files/include.cmake")
endif()
if (EXISTS "C:/Users/fredr/git/nebula/nebula/lib/${FIPS_PLATFORM_NAME}")
    link_directories("C:/Users/fredr/git/nebula/nebula/lib/${FIPS_PLATFORM_NAME}")
endif()
include_directories("C:/Users/fredr/git/nebula/nebula")
include_directories("C:/Users/fredr/git/nebula/nebula/code/foundation")
include_directories("C:/Users/fredr/git/nebula/nebula/code/render")
include_directories("C:/Users/fredr/git/nebula/nebula/code/resource")
include_directories("C:/Users/fredr/git/nebula/nebula/code/application")
include_directories("C:/Users/fredr/git/nebula/nebula/code/physics")
include_directories("C:/Users/fredr/git/nebula/nebula/code/addons")
include_directories("C:/Users/fredr/git/nebula/nebula/code/audio")
macro(fips_import_nebula_foundation)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/nebula/code/foundation" "nebula_foundation")
    set(FIPS_IMPORT)
endmacro()
macro(fips_import_nebula_render)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/nebula/code/render" "nebula_render")
    set(FIPS_IMPORT)
endmacro()
macro(fips_import_nebula_resource)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/nebula/code/resource" "nebula_resource")
    set(FIPS_IMPORT)
endmacro()
macro(fips_import_nebula_application)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/nebula/code/application" "nebula_application")
    set(FIPS_IMPORT)
endmacro()
macro(fips_import_nebula_addons)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/nebula/code/addons" "nebula_addons")
    set(FIPS_IMPORT)
endmacro()
macro(fips_import_nebula_audio)
    set(FIPS_IMPORT 1)
    add_subdirectory("C:/Users/fredr/git/nebula/nebula/code/audio" "nebula_audio")
    set(FIPS_IMPORT)
endmacro()
if (FIPS_AUTO_IMPORT)
    fips_ide_group("Imports/nebula")
    fips_import_nebula_foundation()
    fips_import_nebula_render()
    fips_import_nebula_resource()
    fips_import_nebula_application()
    fips_import_nebula_addons()
    fips_import_nebula_audio()
    fips_ide_group("")
endif()
